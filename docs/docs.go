// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Salvatore Emilio",
            "url": "http://salvatoreemilio.it",
            "email": "@info@salvatoreemilio.it"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/c": {
            "get": {
                "security": [
                    {
                        "X-API-Key": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "c"
                ],
                "summary": "List all Curt(s)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Curt"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "X-API-Key": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "c"
                ],
                "summary": "Create a new Curt",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Curt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/c/{key}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "c"
                ],
                "summary": "Follow a Curt redirect",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Curt Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Moved Permanently"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/status/about": {
            "get": {
                "security": [
                    {
                        "X-API-Key": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "About",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Module"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/status/health": {
            "get": {
                "security": [
                    {
                        "X-API-Key": []
                    }
                ],
                "produces": [
                    "plain/text"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Curt": {
            "type": "object",
            "properties": {
                "TTL": {
                    "type": "integer"
                },
                "curt": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.GenericError": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Module": {
            "type": "object",
            "properties": {
                "info": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "replace": {
                    "$ref": "#/definitions/models.Module"
                },
                "sum": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "X-API-Key": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Curt API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
